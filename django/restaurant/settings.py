"""
Django settings for restaurant project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

from dotenv import load_dotenv
load_dotenv()
print("ENV:" + os.getenv("ENV"))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0o(twcpw(n(mi^!h9dpq6)q@w-#s!dv2(s_8_@m_xeud$^o2_7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['157.90.231.91','192.168.0.110', '127.0.0.1', 'localhost', 'respublica.pesya.ru', 'beta.respublica.bar', '65.21.7.155']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'imagekit',
    'ckeditor',
    'django_svelte',
    'pcpanel',
    'restaurant',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'restaurant.nocache.NoCache'
]

ROOT_URLCONF = 'restaurant.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'restaurant.context_processors.footer'
            ],
        },
    },
]

WSGI_APPLICATION = 'restaurant.wsgi.application'

# Ckeditor
# https://pypi.org/project/django-ckeditor/#optional-customizing-ckeditor-editor

CKEDITOR_CONFIGS = {
    'default': {
        'enterMode': 2,
        'toolbar': 'Custom',
        'toolbar_Custom': [ 
            {'name': 'document', 'items': ['Preview', 'Templates'] },
            {'name': 'clipboard', 'items': ['Undo', 'Redo'] },
            {'name': 'editing', 'items': ['Replace', '-', 'SelectAll'] },          
            {'name': 'basicstyles', 'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
            {'name': 'paragraph', 'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Heading']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['ShowBlocks']},
            {'name': 'about', 'items': ['About']},
        ],
    },
}

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

if os.getenv("ENV") == "production":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'barrespublica',
            'USER': 'postgres',
            'PASSWORD': 'password123321Q',
            'HOST': 'localhost',
            'PORT': '',
        }
    }
if os.getenv("ENV") == "development":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Email
EMAIL_HOST = 'smtp.yandex.ru'

EMAIL_PORT = 587

EMAIL_HOST_USER = "info@zarki-sad.ru"

EMAIL_HOST_PASSWORD = "q1233216"

EMAIL_USE_TLS = True
#EMAIL_USE_SSL = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
if os.getenv("ENV") == "production":
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"
else:
    STATICFILES_DIRS = [
        BASE_DIR.parent / "svelte" / "public" / "build",
        BASE_DIR.parent / "django" / "static",
    ]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Telegram bot api settings:
# https://core.telegram.org/bots/api

TELEGRAM_API_KEY = '2064596905:AAHnSrythz4Iu3zTFSqYQmW0p6PSW9rZZ0Y'
